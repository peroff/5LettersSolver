package main

import "testing"

func TestGetGameAnswer(t *testing.T) {
	cases := []struct {
		secret string
		try    string
		want   string
	}{
		// сауна
		{
			"сауна",
			"норка",
			".---+",
		},
		{
			"сауна",
			"спирт",
			"+----",
		},
		{
			"сауна",
			"смена",
			"+--++",
		},
		{
			"сауна",
			"сауна",
			"+++++",
		},
		// седло
		{
			"седло",
			"гогот",
			"-.---", // важно! "о" - сначала точка, потом минус
		},
		{
			"седло",
			"норка",
			"-.---",
		},
		{
			"седло",
			"спирт",
			"+----",
		},
		{
			"седло",
			"сусло",
			"+--++", // важно! "с" - плюс, потом минус
		},
		// улица
		{
			"улица",
			"гогот",
			"-----",
		},
		{
			"улица",
			"норка",
			"----+",
		},
		{
			"улица",
			"спирт",
			"--+--",
		},
		{
			"улица",
			"дележ",
			"--.--",
		},
		{
			"улица",
			"мачта",
			"----+", // важно! "а" - минус, потом плюс
		},
		// салон
		{
			"салон",
			"норка",
			"..--.",
		},
		{
			"салон",
			"спирт",
			"+----",
		},
		{
			"салон",
			"загон",
			"-+-++",
		},
		// квота
		{
			"квота",
			"норка",
			"-.-.+",
		},
		{
			"квота",
			"спирт",
			"----.",
		},
		{
			"квота",
			"штора",
			"-.+-+",
		},
		// обвал
		{
			"обвал",
			"норка",
			"-.--.",
		},
		{
			"обвал",
			"спирт",
			"-----",
		},
		{
			"обвал",
			"омега",
			"+---.",
		},
		{
			"обвал",
			"оклад",
			"+-.+-",
		},
		// звено
		{
			"звено",
			"норка",
			"..---",
		},
		{
			"звено",
			"спирт",
			"-----",
		},
		{
			"звено",
			"дупло",
			"----+",
		},
		{
			"звено",
			"вызов",
			".-..-",
		},
		// факир
		{
			"факир",
			"норка",
			"--...",
		},
		{
			"факир",
			"спирт",
			"--..-",
		},
		{
			"факир",
			"парик",
			"-+.+.",
		},
		// нутро
		{
			"нутро",
			"норка",
			"+..--",
		},
		{
			"нутро",
			"спирт",
			"---+.",
		},
		// рулет
		{
			"рулет",
			"норка",
			"--.--",
		},
		{
			"рулет",
			"спирт",
			"---.+",
		},
		{
			"рулет",
			"редис",
			"+.---",
		},
		{
			"рулет",
			"муляж",
			"-++--",
		},
		// ловец
		{
			"ловец",
			"гогот",
			"-+---",
		},
		{
			"ловец",
			"норка",
			"-+---",
		},
		{
			"ловец",
			"спирт",
			"-----",
		},
		{
			"ловец",
			"дележ",
			"--.+-",
		},
		// ездок
		{
			"ездок",
			"гогот",
			"---+-",
		},
		{
			"ездок",
			"норка",
			"-.-.-",
		},
		{
			"ездок",
			"спирт",
			"-----",
		},
		{
			"ездок",
			"дележ",
			"..---", // важно! "е" - точка, потом минус
		},
		// туман
		{
			"туман",
			"норка",
			".---.",
		},
		{
			"туман",
			"спирт",
			"----.",
		},
		{
			"туман",
			"телец",
			"+----",
		},
		{
			"туман",
			"манка",
			"...--",
		},
		//
		{
			"abcde",
			"zzzzz",
			"-----",
		},
		{
			"abcde",
			"abcde",
			"+++++",
		},
		{
			"abcde",
			"ezzzz",
			".----",
		},
		{
			"abcde",
			"zzzza",
			"----.",
		},
		{
			"abcde",
			"eabcd",
			".....",
		},
		{
			"abcde",
			"zbzbb",
			"-+---",
		},
		{
			"ababa",
			"bzbzz",
			".-.--",
		},
		{
			"abaab",
			"zbbzz",
			"-+.--",
		},
		{
			"aaabb",
			"bbbzz",
			"..---",
		},
		{
			"aaaab",
			"bzzzb",
			"----+",
		},
		{
			"aabba",
			"bzbzb",
			".-+--",
		},
		{
			"abbba",
			"bzbzb",
			".-+-.",
		},
		{
			"abbaa",
			"bbzzb",
			".+---",
		},
	}

	for i, c := range cases {
		if res := getGameAnswer(c.secret, c.try); res != c.want {
			t.Fatalf("#%d. %q, %q: want %q, got %q",
				i, c.secret, c.try, c.want, res)
		}
	}
}
